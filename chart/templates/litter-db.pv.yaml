# only create the PV if the volume is not managed externally
{{- if not .Values.mongo.volume.external }}
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: {{ .Values.mongo.volume.csi.driver }}
  name: {{ .Values.mongo.volume.pv.name }}-{{ .Release.Name }}

spec:
  capacity:
    storage: {{ .Values.mongo.volume.size }}
  accessModes:
    - ReadWriteOnce
  csi:
    driver: {{ .Values.mongo.volume.csi.driver }}
    volumeHandle:
    # lookup the volume handle from the secret, ensure it exists
      {{- $secret := lookup "v1" "Secret" .Release.Namespace .Values.secrets.name }}
      {{- if and $secret $secret.data }}
      {{ index $secret.data "mongo-volumehandle" | b64dec | quote }}
      {{- else }}
      {{ fail "Secret 'litter-secrets' or key 'mongo-volumehandle' not found" }}
      {{- end }}
    volumeAttributes:
      fsType: {{ .Values.mongo.volume.fsType }}
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ .Values.mongo.volume.storageClassName }}
{{- end }}